{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1QL7hAsfpaTo9hsaCwId53yXXfmsQldPs","timestamp":1696004001544}],"toc_visible":true,"authorship_tag":"ABX9TyOmBLj5XtDlJWb58oe3iVTi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## My First ML Project\n"],"metadata":{"id":"SjpW9w1qLbB3"}},{"cell_type":"markdown","source":["## **Load Data**"],"metadata":{"id":"wvIk4aW-L03v"}},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv('https://raw.githubusercontent.com/dataprofessor/data/master/delaney_solubility_with_descriptors.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"jCnVNtIwLpOl","executionInfo":{"status":"ok","timestamp":1696738508702,"user_tz":240,"elapsed":522,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"ce31131e-7715-4e7a-cd8b-99f2574b16eb"},"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      MolLogP    MolWt  NumRotatableBonds  AromaticProportion   logS\n","0     2.59540  167.850                0.0            0.000000 -2.180\n","1     2.37650  133.405                0.0            0.000000 -2.000\n","2     2.59380  167.850                1.0            0.000000 -1.740\n","3     2.02890  133.405                1.0            0.000000 -1.480\n","4     2.91890  187.375                1.0            0.000000 -3.040\n","...       ...      ...                ...                 ...    ...\n","1139  1.98820  287.343                8.0            0.000000  1.144\n","1140  3.42130  286.114                2.0            0.333333 -4.925\n","1141  3.60960  308.333                4.0            0.695652 -3.893\n","1142  2.56214  354.815                3.0            0.521739 -3.790\n","1143  2.02164  179.219                1.0            0.461538 -2.581\n","\n","[1144 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-604511ed-dc6b-4f56-bccb-6cb23ff1c475\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MolLogP</th>\n","      <th>MolWt</th>\n","      <th>NumRotatableBonds</th>\n","      <th>AromaticProportion</th>\n","      <th>logS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.59540</td>\n","      <td>167.850</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>-2.180</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.37650</td>\n","      <td>133.405</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>-2.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.59380</td>\n","      <td>167.850</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>-1.740</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.02890</td>\n","      <td>133.405</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>-1.480</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.91890</td>\n","      <td>187.375</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>-3.040</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1139</th>\n","      <td>1.98820</td>\n","      <td>287.343</td>\n","      <td>8.0</td>\n","      <td>0.000000</td>\n","      <td>1.144</td>\n","    </tr>\n","    <tr>\n","      <th>1140</th>\n","      <td>3.42130</td>\n","      <td>286.114</td>\n","      <td>2.0</td>\n","      <td>0.333333</td>\n","      <td>-4.925</td>\n","    </tr>\n","    <tr>\n","      <th>1141</th>\n","      <td>3.60960</td>\n","      <td>308.333</td>\n","      <td>4.0</td>\n","      <td>0.695652</td>\n","      <td>-3.893</td>\n","    </tr>\n","    <tr>\n","      <th>1142</th>\n","      <td>2.56214</td>\n","      <td>354.815</td>\n","      <td>3.0</td>\n","      <td>0.521739</td>\n","      <td>-3.790</td>\n","    </tr>\n","    <tr>\n","      <th>1143</th>\n","      <td>2.02164</td>\n","      <td>179.219</td>\n","      <td>1.0</td>\n","      <td>0.461538</td>\n","      <td>-2.581</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1144 rows Ã— 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-604511ed-dc6b-4f56-bccb-6cb23ff1c475')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-604511ed-dc6b-4f56-bccb-6cb23ff1c475 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-604511ed-dc6b-4f56-bccb-6cb23ff1c475');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6cfbfd43-f507-4d93-b8d3-5a7f6f974a17\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6cfbfd43-f507-4d93-b8d3-5a7f6f974a17')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6cfbfd43-f507-4d93-b8d3-5a7f6f974a17 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":1}]},{"cell_type":"markdown","source":["##**Data Prep**"],"metadata":{"id":"hg4YNIWxOA30"}},{"cell_type":"markdown","source":["###Data Separation as X and Y"],"metadata":{"id":"xp1uY918OKhr"}},{"cell_type":"code","source":["y = df['logS']\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sct-LFlYONpY","executionInfo":{"status":"ok","timestamp":1696738516074,"user_tz":240,"elapsed":157,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"3e38c9f8-5e41-461a-d9f2-198a152ceaa4"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      -2.180\n","1      -2.000\n","2      -1.740\n","3      -1.480\n","4      -3.040\n","        ...  \n","1139    1.144\n","1140   -4.925\n","1141   -3.893\n","1142   -3.790\n","1143   -2.581\n","Name: logS, Length: 1144, dtype: float64"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["x = df.drop('logS', axis=1)\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_uPT1_enOWlx","executionInfo":{"status":"ok","timestamp":1696738518455,"user_tz":240,"elapsed":138,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"f3f0a147-3b44-4582-d7d9-79f6cf130413"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      MolLogP    MolWt  NumRotatableBonds  AromaticProportion\n","0     2.59540  167.850                0.0            0.000000\n","1     2.37650  133.405                0.0            0.000000\n","2     2.59380  167.850                1.0            0.000000\n","3     2.02890  133.405                1.0            0.000000\n","4     2.91890  187.375                1.0            0.000000\n","...       ...      ...                ...                 ...\n","1139  1.98820  287.343                8.0            0.000000\n","1140  3.42130  286.114                2.0            0.333333\n","1141  3.60960  308.333                4.0            0.695652\n","1142  2.56214  354.815                3.0            0.521739\n","1143  2.02164  179.219                1.0            0.461538\n","\n","[1144 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-6bbb6886-b600-454f-a73e-890a90390b7f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MolLogP</th>\n","      <th>MolWt</th>\n","      <th>NumRotatableBonds</th>\n","      <th>AromaticProportion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.59540</td>\n","      <td>167.850</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.37650</td>\n","      <td>133.405</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.59380</td>\n","      <td>167.850</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.02890</td>\n","      <td>133.405</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.91890</td>\n","      <td>187.375</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1139</th>\n","      <td>1.98820</td>\n","      <td>287.343</td>\n","      <td>8.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1140</th>\n","      <td>3.42130</td>\n","      <td>286.114</td>\n","      <td>2.0</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>1141</th>\n","      <td>3.60960</td>\n","      <td>308.333</td>\n","      <td>4.0</td>\n","      <td>0.695652</td>\n","    </tr>\n","    <tr>\n","      <th>1142</th>\n","      <td>2.56214</td>\n","      <td>354.815</td>\n","      <td>3.0</td>\n","      <td>0.521739</td>\n","    </tr>\n","    <tr>\n","      <th>1143</th>\n","      <td>2.02164</td>\n","      <td>179.219</td>\n","      <td>1.0</td>\n","      <td>0.461538</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1144 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bbb6886-b600-454f-a73e-890a90390b7f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6bbb6886-b600-454f-a73e-890a90390b7f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6bbb6886-b600-454f-a73e-890a90390b7f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fa948130-e3fb-474c-b198-102c3d01e06a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fa948130-e3fb-474c-b198-102c3d01e06a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fa948130-e3fb-474c-b198-102c3d01e06a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["###Data Splitting"],"metadata":{"id":"CWqNTsTcOrY6"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=100)"],"metadata":{"id":"vBgF6LbIOuOS","executionInfo":{"status":"ok","timestamp":1696738522495,"user_tz":240,"elapsed":938,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["x_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"BaFZvT1_PCcW","executionInfo":{"status":"ok","timestamp":1696738525701,"user_tz":240,"elapsed":109,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"3bd34cb5-0289-455f-cc17-0b44cd27908c"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     MolLogP    MolWt  NumRotatableBonds  AromaticProportion\n","107  3.14280  112.216                5.0            0.000000\n","378 -2.07850  142.070                0.0            0.000000\n","529 -0.47730  168.152                0.0            0.000000\n","546 -0.86740  154.125                0.0            0.000000\n","320  1.62150  100.161                2.0            0.000000\n","..       ...      ...                ...                 ...\n","802  3.00254  250.301                1.0            0.842105\n","53   2.13860   82.146                3.0            0.000000\n","350  5.76304  256.348                0.0            0.900000\n","79   3.89960  186.339               10.0            0.000000\n","792  2.52334  310.297                3.0            0.300000\n","\n","[915 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-38cd9f31-29df-4535-a5c1-ab3074249c1f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MolLogP</th>\n","      <th>MolWt</th>\n","      <th>NumRotatableBonds</th>\n","      <th>AromaticProportion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>107</th>\n","      <td>3.14280</td>\n","      <td>112.216</td>\n","      <td>5.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>378</th>\n","      <td>-2.07850</td>\n","      <td>142.070</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>-0.47730</td>\n","      <td>168.152</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>546</th>\n","      <td>-0.86740</td>\n","      <td>154.125</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>320</th>\n","      <td>1.62150</td>\n","      <td>100.161</td>\n","      <td>2.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>802</th>\n","      <td>3.00254</td>\n","      <td>250.301</td>\n","      <td>1.0</td>\n","      <td>0.842105</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>2.13860</td>\n","      <td>82.146</td>\n","      <td>3.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>350</th>\n","      <td>5.76304</td>\n","      <td>256.348</td>\n","      <td>0.0</td>\n","      <td>0.900000</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>3.89960</td>\n","      <td>186.339</td>\n","      <td>10.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>792</th>\n","      <td>2.52334</td>\n","      <td>310.297</td>\n","      <td>3.0</td>\n","      <td>0.300000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>915 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38cd9f31-29df-4535-a5c1-ab3074249c1f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38cd9f31-29df-4535-a5c1-ab3074249c1f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38cd9f31-29df-4535-a5c1-ab3074249c1f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f9b8f1bb-077b-452c-8866-c9929289eee2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9b8f1bb-077b-452c-8866-c9929289eee2')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f9b8f1bb-077b-452c-8866-c9929289eee2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["x_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"yyc964q0PFUx","executionInfo":{"status":"ok","timestamp":1696738528807,"user_tz":240,"elapsed":171,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"f7934bd3-4c2d-449b-ee3d-2b8e007cd217"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      MolLogP    MolWt  NumRotatableBonds  AromaticProportion\n","822   2.91000  172.268                7.0            0.000000\n","118   7.27400  360.882                1.0            0.666667\n","347   1.94040  145.161                0.0            0.909091\n","1123  1.98640  119.378                0.0            0.000000\n","924   1.70062  108.140                0.0            0.750000\n","...       ...      ...                ...                 ...\n","1114  1.76210  478.513                4.0            0.000000\n","427   6.32820  276.338                0.0            1.000000\n","711   0.04430  218.205                5.0            0.000000\n","4     2.91890  187.375                1.0            0.000000\n","948   3.56010  318.328                2.0            0.750000\n","\n","[229 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-b79eb0d2-9059-485e-864f-1b141647119a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MolLogP</th>\n","      <th>MolWt</th>\n","      <th>NumRotatableBonds</th>\n","      <th>AromaticProportion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>822</th>\n","      <td>2.91000</td>\n","      <td>172.268</td>\n","      <td>7.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>118</th>\n","      <td>7.27400</td>\n","      <td>360.882</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","    </tr>\n","    <tr>\n","      <th>347</th>\n","      <td>1.94040</td>\n","      <td>145.161</td>\n","      <td>0.0</td>\n","      <td>0.909091</td>\n","    </tr>\n","    <tr>\n","      <th>1123</th>\n","      <td>1.98640</td>\n","      <td>119.378</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>924</th>\n","      <td>1.70062</td>\n","      <td>108.140</td>\n","      <td>0.0</td>\n","      <td>0.750000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1114</th>\n","      <td>1.76210</td>\n","      <td>478.513</td>\n","      <td>4.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>427</th>\n","      <td>6.32820</td>\n","      <td>276.338</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>711</th>\n","      <td>0.04430</td>\n","      <td>218.205</td>\n","      <td>5.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.91890</td>\n","      <td>187.375</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>948</th>\n","      <td>3.56010</td>\n","      <td>318.328</td>\n","      <td>2.0</td>\n","      <td>0.750000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>229 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b79eb0d2-9059-485e-864f-1b141647119a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b79eb0d2-9059-485e-864f-1b141647119a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b79eb0d2-9059-485e-864f-1b141647119a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b1949c51-61c1-4874-aa4b-8851121fd7ec\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1949c51-61c1-4874-aa4b-8851121fd7ec')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b1949c51-61c1-4874-aa4b-8851121fd7ec button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["##Model Building"],"metadata":{"id":"Bo3-xdPNPsl_"}},{"cell_type":"markdown","source":["###Linear Regression"],"metadata":{"id":"wmI9NWcJPvU2"}},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","\n","lr = LinearRegression()\n","lr.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"ml08aqhoPxtC","executionInfo":{"status":"ok","timestamp":1696738533706,"user_tz":240,"elapsed":250,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"2785010b-4f63-415e-e386-9edc3f6434d4"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["y_lr_train_pred = lr.predict(x_train)\n","y_lr_test_pred = lr.predict(x_test)"],"metadata":{"id":"2DlcvH_JQPct","executionInfo":{"status":"ok","timestamp":1696738536787,"user_tz":240,"elapsed":117,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["y_lr_test_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3OKXCmF1Qvcf","executionInfo":{"status":"ok","timestamp":1696738539107,"user_tz":240,"elapsed":189,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"aec41dce-a451-4e8b-dfc5-41ed7ea1deec"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-3.05722870e+00, -7.77785827e+00, -2.55016650e+00, -2.01523582e+00,\n","       -2.06375990e+00, -9.99672215e-01, -5.94603364e-01, -5.53626003e-01,\n","       -5.72200956e+00, -3.94006681e+00, -3.95496755e+00, -2.29737009e+00,\n","       -1.48980354e+00, -1.48988982e+00, -4.64510806e+00, -1.90396018e+00,\n","       -1.51566313e+00, -3.16424605e+00, -3.70863920e+00, -5.58105660e+00,\n","       -3.25038467e+00, -5.04235077e+00, -5.69194881e+00, -2.14339849e+00,\n","       -4.35689341e+00, -5.03964756e+00, -3.10383618e+00, -4.40286964e+00,\n","       -4.21276272e+00,  5.56508349e-01, -1.45537678e+00, -4.41027396e+00,\n","       -2.59668773e+00, -1.53336276e+00, -5.55749874e-01, -1.67111795e+00,\n","       -2.78163675e+00, -3.15395565e+00, -5.27083361e+00, -1.75321446e+00,\n","       -1.53350725e+00, -2.01255666e+00, -6.57559167e+00, -7.89433046e+00,\n","       -5.76437127e+00, -4.16422068e+00, -3.43694663e+00,  1.43834212e+00,\n","       -1.12679105e-02, -2.34521849e+00, -1.86480046e+00, -5.03964756e+00,\n","        8.55886378e-01, -3.17679292e+00, -5.06764094e+00, -1.99464442e+00,\n","       -7.77785827e+00, -1.21764693e+00, -9.09541075e-01, -5.04235077e+00,\n","       -2.43898748e+00, -2.84034045e+00, -2.53403538e+00, -2.36170311e+00,\n","       -1.63103729e+00, -1.53182046e+00, -3.23931568e+00, -2.88008616e+00,\n","       -1.88300518e+00, -3.21582220e+00, -3.40245202e+00, -9.01813905e-01,\n","       -4.82308940e+00, -7.69116343e-01, -7.12894308e+00, -1.05440427e+01,\n","       -1.95444152e+00, -3.50194744e+00, -7.18167736e+00, -6.01555673e+00,\n","       -2.08189806e+00, -2.31652280e+00, -3.44556948e+00, -2.05480142e+00,\n","       -6.01555673e+00, -2.88308299e+00, -4.84867198e+00, -3.51006495e-01,\n","       -3.54726250e+00, -1.21057919e+00, -4.36658559e+00, -4.21815903e-01,\n","       -1.63103729e+00, -2.51604291e+00, -2.16707077e+00, -1.48726025e+00,\n","       -3.20864450e+00, -1.51411141e+00, -1.65033691e+00, -3.66287663e+00,\n","       -3.26968347e+00, -3.94492313e+00, -4.22509088e+00, -3.68794650e+00,\n","       -5.98734972e+00, -1.43710934e+00, -1.97653920e+00, -1.85076729e+00,\n","       -1.14179382e+00, -3.07730828e+00, -4.84867198e+00, -2.19679345e+00,\n","       -1.68737438e+00, -2.20390218e+00,  1.89408269e+00, -3.61322115e+00,\n","       -2.79173430e+00, -2.41564138e+00, -7.53910534e-01, -8.54744860e-01,\n","       -9.20407401e-02, -6.14209981e+00, -3.79386016e+00, -7.77785827e+00,\n","       -1.79874130e+00, -2.50544035e+00, -3.77102985e+00, -2.25250766e+00,\n","       -2.57788713e+00, -2.06375990e+00, -3.33843958e+00, -1.03912484e+00,\n","       -6.68946164e+00, -1.91112045e+00, -2.58735850e+00, -2.19902800e+00,\n","       -1.90219551e+00, -2.81396751e+00, -4.16972153e+00, -5.72200956e+00,\n","       -1.60816482e+00, -3.68121117e+00, -4.60929775e+00, -2.45888480e+00,\n","        1.13185484e+00, -1.69279625e+00, -7.09025955e+00, -3.79386016e+00,\n","       -2.99712058e+00, -5.79600137e+00, -2.44845780e+00, -5.29399242e+00,\n","       -5.29389899e-01, -3.53652118e+00, -3.51200413e+00, -2.02419300e+00,\n","       -4.47466933e+00, -3.63836536e+00, -4.56596939e+00, -5.57842703e+00,\n","       -5.30676136e+00, -2.39225449e+00, -4.88290144e+00, -2.61359308e+00,\n","       -3.11841945e+00, -2.05580278e+00, -1.64987419e+00, -4.91881901e+00,\n","       -3.93774254e+00, -4.26411548e+00, -3.15082845e+00, -3.49352203e+00,\n","       -3.81768831e+00, -3.77197350e+00, -2.55016650e+00, -1.97653920e+00,\n","       -2.59432621e+00, -5.38480406e+00, -5.44932525e+00, -3.04107137e+00,\n","       -1.87252408e+00, -2.25124657e+00, -2.89215707e+00, -3.46087334e+00,\n","       -6.06861986e+00, -1.89916369e+00, -1.98035105e+00, -2.45036038e+00,\n","       -2.79393037e+00, -4.76010415e+00, -1.72379306e+00, -7.09025955e+00,\n","       -2.86880150e+00, -2.70674744e+00, -4.36825704e+00, -3.11841945e+00,\n","       -3.85805633e+00,  9.78662246e-03, -4.47466933e+00, -6.08708502e+00,\n","       -5.19970454e+00, -6.40483191e+00, -4.10155218e+00, -1.07044752e+00,\n","        1.99249372e+00, -3.63698515e+00, -8.50933009e-01, -3.26770298e+00,\n","       -4.78343575e+00, -1.48988982e+00, -2.24629276e+00, -4.13247222e+00,\n","       -4.36873484e+00, -1.89724815e+00, -1.50596465e+00, -1.16713539e-02,\n","       -1.73602998e+00, -2.34521849e+00, -4.54942814e-01, -4.18812419e+00,\n","       -1.87770440e+00, -3.70838271e+00, -1.59899899e+00, -3.26143822e+00,\n","       -4.17623614e+00, -6.67872053e+00, -1.23069039e+00, -3.14545964e+00,\n","       -4.79863925e+00])"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["###Evaluate Model Performance"],"metadata":{"id":"PYGUferFRIAa"}},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error, r2_score\n","\n","lr_train_mse = mean_squared_error(y_train, y_lr_train_pred)\n","lr_train_r2 = r2_score(y_train, y_lr_train_pred)\n","\n","lr_test_mse = mean_squared_error(y_test, y_lr_test_pred)\n","lr_test_r2 = r2_score(y_test, y_lr_test_pred)"],"metadata":{"id":"LlGOVoA1RM9U","executionInfo":{"status":"ok","timestamp":1696738544073,"user_tz":240,"elapsed":123,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["print('LR MSE (Train): ', lr_train_mse)\n","print('LR R2 (Train): ', lr_train_r2)\n","print('LR MSE (Test): ', lr_test_mse)\n","print('LR R2 (Test): ', lr_test_r2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w9Oh8y0xSp1h","executionInfo":{"status":"ok","timestamp":1696738547582,"user_tz":240,"elapsed":94,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"85ca603f-78f0-4668-c114-b4af4f78daaf"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["LR MSE (Train):  1.0075362951093687\n","LR R2 (Train):  0.7645051774663391\n","LR MSE (Test):  1.0206953660861033\n","LR R2 (Test):  0.7891616188563282\n"]}]},{"cell_type":"code","source":["lr_results = pd.DataFrame(['Linear regression', lr_train_mse, lr_train_r2, lr_test_mse, lr_test_r2]).transpose()\n","\n","lr_results.columns = ['Method', 'Training MSE', 'Training R2', 'Test MSE', 'Test R2']"],"metadata":{"id":"dzbDjjkMSjH5","executionInfo":{"status":"ok","timestamp":1696738550490,"user_tz":240,"elapsed":91,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["lr_results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"zcX_DCOvU-id","executionInfo":{"status":"ok","timestamp":1696738552740,"user_tz":240,"elapsed":282,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"15a74d56-e264-45d4-ee2a-45c56a424b51"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Method Training MSE Training R2  Test MSE   Test R2\n","0  Linear regression     1.007536    0.764505  1.020695  0.789162"],"text/html":["\n","  <div id=\"df-ad1231a3-6ecd-4d1b-aaac-53421b4036ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Method</th>\n","      <th>Training MSE</th>\n","      <th>Training R2</th>\n","      <th>Test MSE</th>\n","      <th>Test R2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Linear regression</td>\n","      <td>1.007536</td>\n","      <td>0.764505</td>\n","      <td>1.020695</td>\n","      <td>0.789162</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad1231a3-6ecd-4d1b-aaac-53421b4036ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ad1231a3-6ecd-4d1b-aaac-53421b4036ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ad1231a3-6ecd-4d1b-aaac-53421b4036ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["##Random Forest"],"metadata":{"id":"KhmExpCYZZia"}},{"cell_type":"markdown","source":["###Applying Model to Make Prediction"],"metadata":{"id":"1MIMw0jrZmK_"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestRegressor\n","\n","rf = RandomForestRegressor(max_depth=2, random_state=100)\n","rf.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"J1vp19g-WII2","executionInfo":{"status":"ok","timestamp":1696738555986,"user_tz":240,"elapsed":539,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"5a628a2f-9fff-4fdb-b796-5ea5e4e8bdd4"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(max_depth=2, random_state=100)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(max_depth=2, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(max_depth=2, random_state=100)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["y_rf_train_pred = rf.predict(x_train)\n","y_rf_test_pred = rf.predict(x_test)"],"metadata":{"id":"mZS0AHZuaqLS","executionInfo":{"status":"ok","timestamp":1696738559025,"user_tz":240,"elapsed":188,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error, r2_score\n","\n","rf_train_mse = mean_squared_error(y_train, y_rf_train_pred)\n","rf_train_r2 = r2_score(y_train, y_rf_train_pred)\n","\n","rf_test_mse = mean_squared_error(y_test, y_rf_test_pred)\n","rf_test_r2 = r2_score(y_test, y_rf_test_pred)"],"metadata":{"id":"HXWma7a-bEKT","executionInfo":{"status":"ok","timestamp":1696738560484,"user_tz":240,"elapsed":104,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["rf_results = pd.DataFrame(['Random Forest', rf_train_mse, rf_train_r2, rf_test_mse, rf_test_r2]).transpose()\n","\n","rf_results.columns = ['Method', 'Training MSE', 'Training R2', 'Test MSE', 'Test R2']\n","rf_results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"4ZfArsswba2l","executionInfo":{"status":"ok","timestamp":1696738561937,"user_tz":240,"elapsed":105,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"67f41b02-63cb-4004-bfdb-aad506e9040f"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Method Training MSE Training R2  Test MSE   Test R2\n","0  Random Forest     1.028228    0.759669  1.407688  0.709223"],"text/html":["\n","  <div id=\"df-48cd9b57-484f-4f1d-b86e-40e0ac4322fa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Method</th>\n","      <th>Training MSE</th>\n","      <th>Training R2</th>\n","      <th>Test MSE</th>\n","      <th>Test R2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Random Forest</td>\n","      <td>1.028228</td>\n","      <td>0.759669</td>\n","      <td>1.407688</td>\n","      <td>0.709223</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48cd9b57-484f-4f1d-b86e-40e0ac4322fa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-48cd9b57-484f-4f1d-b86e-40e0ac4322fa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-48cd9b57-484f-4f1d-b86e-40e0ac4322fa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["##Model Comparison"],"metadata":{"id":"AaAnnMInb4sQ"}},{"cell_type":"markdown","source":[],"metadata":{"id":"P1QQjosYb37f"}},{"cell_type":"code","source":["df_models = pd.concat([lr_results, rf_results], axis=0)\n","df_models"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"-PORpKJYbseE","executionInfo":{"status":"ok","timestamp":1696738565319,"user_tz":240,"elapsed":164,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"033ae17e-da08-4f6f-ef47-7b686b9ab0f2"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Method Training MSE Training R2  Test MSE   Test R2\n","0  Linear regression     1.007536    0.764505  1.020695  0.789162\n","0      Random Forest     1.028228    0.759669  1.407688  0.709223"],"text/html":["\n","  <div id=\"df-34bded3b-3822-4320-b6b8-a5cd2a9bc83e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Method</th>\n","      <th>Training MSE</th>\n","      <th>Training R2</th>\n","      <th>Test MSE</th>\n","      <th>Test R2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Linear regression</td>\n","      <td>1.007536</td>\n","      <td>0.764505</td>\n","      <td>1.020695</td>\n","      <td>0.789162</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Random Forest</td>\n","      <td>1.028228</td>\n","      <td>0.759669</td>\n","      <td>1.407688</td>\n","      <td>0.709223</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34bded3b-3822-4320-b6b8-a5cd2a9bc83e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-34bded3b-3822-4320-b6b8-a5cd2a9bc83e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-34bded3b-3822-4320-b6b8-a5cd2a9bc83e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b4bd91fe-9d4d-4db8-9fff-3bdcb1edca7e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b4bd91fe-9d4d-4db8-9fff-3bdcb1edca7e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b4bd91fe-9d4d-4db8-9fff-3bdcb1edca7e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df_models.reset_index(drop=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"NEbWvJ0QcL4A","executionInfo":{"status":"ok","timestamp":1696738567953,"user_tz":240,"elapsed":226,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"dc147413-08e8-4bc7-c1f1-2dedf5746bc2"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Method Training MSE Training R2  Test MSE   Test R2\n","0  Linear regression     1.007536    0.764505  1.020695  0.789162\n","1      Random Forest     1.028228    0.759669  1.407688  0.709223"],"text/html":["\n","  <div id=\"df-1f7156a2-c8e3-4f19-b982-7eaa19574a60\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Method</th>\n","      <th>Training MSE</th>\n","      <th>Training R2</th>\n","      <th>Test MSE</th>\n","      <th>Test R2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Linear regression</td>\n","      <td>1.007536</td>\n","      <td>0.764505</td>\n","      <td>1.020695</td>\n","      <td>0.789162</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>1.028228</td>\n","      <td>0.759669</td>\n","      <td>1.407688</td>\n","      <td>0.709223</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f7156a2-c8e3-4f19-b982-7eaa19574a60')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1f7156a2-c8e3-4f19-b982-7eaa19574a60 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1f7156a2-c8e3-4f19-b982-7eaa19574a60');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f21d8420-3f83-40f5-9cd5-0fb58ef8e4a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f21d8420-3f83-40f5-9cd5-0fb58ef8e4a6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f21d8420-3f83-40f5-9cd5-0fb58ef8e4a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["#Data Visualization of Prediction Results"],"metadata":{"id":"X9Qr0LPIcreA"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","plt.figure(figsize=(5,5))\n","plt.scatter(x=y_train, y=y_lr_train_pred, alpha=0.3)\n","z = np.polyfit(y_train, y_lr_train_pred, 1)\n","p = np.poly1d(z)\n","plt.plot(y_train, p(y_train), '#F8766D')\n","plt.xlabel('Experimental LogS')\n","plt.ylabel('Predict LogS')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"dZgpFj74czQm","executionInfo":{"status":"ok","timestamp":1696738570313,"user_tz":240,"elapsed":282,"user":{"displayName":"Ammar Arshad","userId":"00409686484002229542"}},"outputId":"7d48cb4f-df89-441d-8dc6-9170b928de0b"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Predict LogS')"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["###End"],"metadata":{"id":"kP37kOfldKMN"},"execution_count":null,"outputs":[]}]}